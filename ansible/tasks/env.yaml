---

# Add repositories
# docker
- name: Check docker apt file
  command: test -f /etc/apt/sources.list.d/docker.list
  register: docker_apt_exists
  ignore_errors: True
  tags:
  - env
  - addrepos
  - packages
- name: Add Docker key
  shell: wget -q -O - https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  when: docker_apt_exists.rc == 1
  tags:
  - env
  - addrepos
  - packages
- name: Add Docker repo
  copy:
    content: |
      deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu.release }}ean stable
    dest: /etc/apt/sources.list.d/docker.list
    owner: root
    group: root
    mode: 644
  when: docker_apt_exists.rc == 1
  tags:
  - env
  - addrepos
  - packages

# bazel
- name: Check  bazel apt file
  command: test -f /etc/apt/sources.list.d/bazel.list
  register: bazel_apt_exists
  ignore_errors: True
  tags:
  - env
  - addrepos
  - packages
- name: Add Bazel key
  shell: wget -q -O - https://bazel.build/bazel-release.pub.gpg | apt-key add -
  when: bazel_apt_exists.rc == 1
  tags:
  - env
  - addrepos
  - packages
- name: Add Bazel repo
  copy:
    content: |
      deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8
    dest: /etc/apt/sources.list.d/bazel.list
    owner: root
    group: root
    mode: 644
  when: bazel_apt_exists.rc == 1
  tags:
  - env
  - addrepos
  - packages

# Install packages
- name: Install packages
  apt:
    pkg:
    - snapd
    - vim
    - stow
    - curl
    - wget
    - jq
    - git
    - zsh
    - zsh-syntax-highlighting
    - fonts-powerline
    - fonts-font-awesome
    - bazel
    - docker-ce
    - docker-ce-cli
  tags:
  - env
  - packages

- name: Install snap packages
  snap:
    name: "{{ item.name }}"
    classic: "{{ item.classic }}"
    channel: "{{ item.channel }}"
  with_items:
  - name: code
    classic: true
    channel: stable
  - name: helm
    classic: true
    channel: stable
  tags:
  - env
  - packages

# oh-my-zsh
# - name: Check oh-my-zsh
#   stat:
#     path: ~/.oh-my-zsh
#   register: ohmy
#   become_user: "{{ user }}"
#   tags: env
# - name: Install oh-my-zsh
#   shell: CHSH=no RUNZSH=no sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
#   when: ohmy.stat.exists == False
#   become_user: "{{ user }}"
#   tags: env

# TODO Further test https://github.com/sorin-ionescu/prezto

- name: Switch shell
  shell: /usr/bin/chsh -s $(which zsh) {{ user }}
  tags: 
  - env
  - shell

- name: Install bazel auto completion
  get_url:
    url: https://raw.githubusercontent.com/bazelbuild/bazel/master/scripts/zsh_completion/_bazel
    dest: /usr/local/share/zsh/site-functions/
  tags: 
  - env
  - shell

# i3 + i3-gaps
- name: Add ppa for i3-gaps
  apt_repository:
    repo: ppa:kgilmer/speed-ricer
  tags: 
  - env
  - i3
- name: Install i3 packages
  apt:
    pkg:
    - i3-gaps
    - i3blocks
    - i3lock
    - i3status
    - xfce4-terminal
  tags:
  - env
  - i3

# vscode
- name: Install vscode extensions
  shell: |
    /snap/bin/code --install-extension BazelBuild.vscode-bazel
    /snap/bin/code --install-extension DavidAnson.vscode-markdownlint
    /snap/bin/code --install-extension mauve.terraform
    /snap/bin/code --install-extension ms-vscode.Go
    /snap/bin/code --install-extension vscoss.vscode-ansible
    /snap/bin/code --install-extension vscode-icons-team.vscode-icons
  become_user: "{{ user }}"
  tags:
  - env
  - vscode
- name: Deploy vscode config
  copy:
    content: |
      {
        "window.zoomLevel": 0,
        "workbench.colorTheme": "Default Light+",
        "window.titleBarStyle": "custom",
        "workbench.iconTheme": "vscode-icons",
        "go.gopath": "/home/bt0923/code/gopath"
      }
    dest: ${HOME}/.config/Code/User/settings.json
  become_user: "{{ user }}"
  tags: 
  - env
  - vscode

# dotfiles
- name: Execute stow to create symlinks
  shell: |
    cd ${HOME}/code/src/github.com/chkrde/devbox/dotfiles
    for i in */
    do
      stow ${i} -v -t ${HOME}
    done
  become_user: "{{ user }}"
  tags:
  - env
