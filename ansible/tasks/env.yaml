---

# Preperation
- name: Get (ubuntu) release
  command: /usr/bin/lsb_release -cs
  register: release_name
  changed_when: false
  tags: always
  when: ansible_distribution == "Ubuntu"

- name: Create directories
  file:
    path: "{{ item }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0755'
    state: directory
  with_items:
    - "/home/{{ user }}/bin"
    - "/home/{{ user }}/code/gopath"
  tags:
  - env

# Add repositories
# vscode
- name: Add vscode key
  apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
    state: present
  when: ansible_distribution == "Ubuntu"
  tags:
  - env
  - addrepos
  - packages
- name: Add vscode repo
  apt_repository:
    repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
    filename: vscode
    state: present
    update_cache: no
  when: ansible_distribution == "Ubuntu"
  tags:
  - env
  - addrepos
  - packages

# docker
- name: Add Docker key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags:
  - env
  - addrepos
  - packages
  when: ansible_distribution == "Ubuntu"
- name: Add Docker repo
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ release_name }} stable
    filename: docker
    state: present
    update_cache: no
  when: ansible_distribution == "Ubuntu"
  tags:
  - env
  - addrepos
  - packages

# bazel
- name: Add Bazel key
  apt_key:
    url: https://bazel.build/bazel-release.pub.gpg
    state: present
  when: ansible_distribution == "Ubuntu"
  tags:
  - env
  - addrepos
  - packages
- name: Add Bazel repo
  apt_repository:
    repo: deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8
    filename: bazel
    state: present
    update_cache: no
  when: ansible_distribution == "Ubuntu"
  tags:
  - env
  - addrepos
  - packages

# Install packages
- name: Install packages
  package:
    state: present
    name:
    - snapd
    - vim
    - mc
    - stow
    - tmux
    - xfce4-terminal
    - curl
    - wget
    - jq
    - git
    - zsh
    - zsh-syntax-highlighting
    - code
    - bazel
    - glances
  tags:
  - env
  - packages

- name: Install apt specific packages
  package:
    state: present
    name:
    - docker-ce
    - docker-ce-cli
    - fonts-powerline
    - fonts-font-awesome
    - python3-pip
  when: ansible_distribution == "Ubuntu"

- name: Install pacman specific packages
  package:
    state: present
    name:
    - docker
    - helm
    - ttf-font-awesome
    - powerline-fonts
    - python-pip
  when: ansible_distribution == "Archlinux"

# TODO remove snap & snapd foo
- name: Install snap packages
  snap:
    name: "{{ item.name }}"
    classic: "{{ item.classic }}"
    channel: "{{ item.channel }}"
  with_items:
  - name: helm
    classic: true
    channel: stable
  when: ansible_distribution == "Ubuntu"
  tags:
  - env
  - packages

# Shell
- name: Switch shell
  user:
    name: "{{ user }}"
    shell: /usr/bin/zsh
  tags: 
  - env
  - shell

# Install prezto
- name: Check prezto exists
  command: test -d ${HOME}/.zprezto
  register: prezto_exists
  ignore_errors: True
  become_user: "{{ user }}"
  changed_when: false
  tags:
  - env
  - shell
- name: Clone chkrde/zprezto
  git: 
    repo: https://github.com/chkrde/prezto.git
    dest: ${HOME}/.zprezto
    recursive: yes
  when: prezto_exists.rc == 1
  become_user: "{{ user }}"
  tags:
  - env
  - shell
- name: Symlink prezto configuration
  shell: |
    setopt EXTENDED_GLOB
    for rcfile in "${ZDOTDIR:-$HOME}"/.zprezto/runcoms/^README.md(.N); do
      ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"
    done
  args:
    executable: /usr/bin/zsh
  when: prezto_exists.rc == 1
  become_user: "{{ user }}"
  tags:
  - env
  - shell

# dotfiles
- name: Execute stow to create dotfile symlinks
  shell: |
    cd ${HOME}/code/src/github.com/chkrde/devbox/dotfiles
    for i in */
    do
      stow ${i} -v -t ${HOME}
    done
  become_user: "{{ user }}"
  tags:
  - env
  - shell
  - dotfiles

- name: Create site_functions directory (exists on debian)
  file:
    path: "/usr/local/share/zsh/site-functions"
    owner: "root"
    group: "root"
    mode: '0755'
    state: directory

- name: Install bazel auto completion
  get_url:
    url: https://raw.githubusercontent.com/bazelbuild/bazel/master/scripts/zsh_completion/_bazel
    dest: /usr/local/share/zsh/site-functions/
  tags: 
  - env
  - shell

# i3 + i3-gaps
- name: Add ppa for i3-gaps
  apt_repository:
    repo: ppa:kgilmer/speed-ricer
  tags: 
  - env
  - i3
  when: ansible_distribution == "Ubuntu"

- name: Install i3 packages
  package:
    state: present
    name:
    - i3-gaps
    - i3blocks
    - i3lock
    - i3status
    - xfce4-terminal
  tags:
  - env
  - i3

- name: Install pacman i3 packages
  package:
    state: present
    name:
    - dmenu
    - perl-json-xs
    - perl-anyevent-i3
  tags:
  - env
  - i3
  when: ansible_distribution == "Archlinux"

# vscode
# settings via dotfile
- name: Install vscode extensions
  shell: |
    /usr/bin/code --install-extension BazelBuild.vscode-bazel
    /usr/bin/code --install-extension DavidAnson.vscode-markdownlint
    /usr/bin/code --install-extension ms-vscode.Go
    /usr/bin/code --install-extension vscoss.vscode-ansible
    /usr/bin/code --install-extension vscode-icons-team.vscode-icons
  become_user: "{{ user }}"
  tags:
  - env
  - vscode

# Install terraform
- name: Get terraform
  unarchive:
    src: "https://releases.hashicorp.com/terraform/{{ terrraform.version }}/terraform_{{ terrraform.version }}_linux_amd64.zip"
    dest: ${HOME}/bin/
    remote_src: yes
  become_user: "{{ user }}"
  tags: 
  - env

# Install go
- name: Create go directory
  file:
    path: /usr/local/go-{{ go.version }}
    state: directory
    mode: '0755'
  tags:
  - env
  - go
- name: Get go
  unarchive:
    src: "https://dl.google.com/go/go{{ go.version }}.linux-amd64.tar.gz"
    dest: /usr/local/go-{{ go.version }}
    remote_src: yes  
  tags: 
  - env
  - go
- name: Symlink go
  file:
    src: /usr/local/go-{{ go.version }}/go
    dest: /usr/local/go
    owner: root
    group: root
    mode: '0755'
    state: link
  tags:
  - env
  - go
