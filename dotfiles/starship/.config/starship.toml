# Inserts a blank line between shell prompts
add_newline = true
scan_timeout = 10
format = """
$username\
$hostname\
$shlvl\
$singularity\
$kubernetes\
$env_var\
${custom.ostack}\
$directory\
$vcsh\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
$docker_context\
$package\
$cmake\
$cobol\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$golang\
$helm\
$java\
$julia\
$kotlin\
$lua\
$nim\
$nodejs\
$ocaml\
$perl\
$php\
$purescript\
$python\
$rlang\
$red\
$ruby\
$rust\
$scala\
$swift\
$terraform\
$vlang\
$vagrant\
$zig\
$nix_shell\
$conda\
$memory_usage\
$aws\
$gcloud\
$openstack\
$crystal\
$custom\
$jobs\
$battery\
$fill\
${custom.zsh}\
${custom.bash}\
$cmd_duration\
$shell\
$time\
$status\
${custom.daily}\
${custom.beer}\
${custom.lunch}\
$line_break\
${custom.return}\
$character
"""


[character]
format = "$symbol "
success_symbol = '[\$](bold fg:2)'
# error_symbol = '[\$](bold fg:1)'
error_symbol = 'üî•'

[status]
# style = "bg:3  fg:15"
style = "fg:214"
symbol = "üî•"
# format = '[$common_meaning$signal_name\($int\) ]($style)'
format = '[>](fg:#505050) [$common_meaning$signal_name\($int\) ]($style)'
# format = '[ $common_meaning$signal_name \($int\) ]($style)[ÓÇ∞](fg:3 bg:#004266)'
# format = '[\[$symbol $common_meaning$signal_name$maybe_int\]]($style) '
map_symbol = true
disabled = false

[shell]
disabled = true

[line_break]
disabled = false

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

[terraform]
disabled = true

[username]
style_user = "fg:253 bg:242"
style_root = "red bold"
format = "[$user]($style)"
disabled = true
show_always = true

[hostname]
ssh_only = false
format =  "[@$hostname ](fg:248 bg:242)[ÓÇ∞](fg:242 bg:12)"
trim_at = ".host.net"
disabled = true

[fill]
symbol = " "
style = "bold green"
disabled = true

[kubernetes]
# with env var after k8s
# format = '[[Ô¥±](fg:15)[$context](fg:45)\($namespace\) ](fg:248)'
# Óò°Ôõò Ô°û  Ôë†
format = '[[Ô¥±](fg:15)[$context](fg:38)Ô°û$namespace ](fg:248)'
#format  = '[ [Ô¥±](fg:255 bg:#004266)  [$context]( bold fg:251 bg:#004266) \([$namespace](fg:251 bg:#004266)\) ](fg:251 bg:#004266)[ÓÇ∞](fg:#004266 bg:#157399)'
# only k8s: # format  = '[ [Ô¥±](fg:255 bg:#004266) [$context]( bold fg:251 bg:#004266) \([$namespace](fg:251 bg:#004266)\) ](fg:251 bg:#004266)[ÓÇ∞](fg:#004266 bg:#002b36)'
disabled = false
[kubernetes.context_aliases]
'^(?P<tenant>\S{3}p\S{3})-cluster-admin' = ' $tenant'
'^(?P<tenant>\S{3}pc\S{3})-cluster-admin' = ' $tenant'
# '^(?P<tenant>\S{3}[()]p\S{3})-cluster-admin' = ' test $tenant'

# '^(?P<tenant>\S{3}pc.+)' = ' $tenant'
# '^(?P<tenant>\S{3}p005.+)' = ' $tenant'
# '^(?P<tenant>\S{3}p006.+)' = ' $tenant'

# '^(?P<tenant>\S{3}pc\S{3})-cluster-admin' = 'dev $tenant'
# '^(?P<region>\S{3})p006-(?P<rest>\S+)' = 'capi $region' # $rest'
# '^(?P<region>\S{3})p005-(?P<rest>\S+)' = 'svc $region' # $rest'
## lookaround not working in regex crate: https://github.com/rust-lang/regex/issues/127
#'^(?P<tenant>\S{3}p(?!(c|005|006))\S{3})-cluster-admin' = ' ‚ö†Ô∏è  $tenant'

#'^(?P<region>\S{3})pc005-(?P<rest>\S+)' = '$region Nightly $rest'
#'^(?P<region>[^.]{3}).*' = 'CAPI $region $rest '

[custom.ostack]
# Ô≥á Ôû® Ô•° Ô¶å Ôë≥ Óòà ÓèÄ
command = 'echo "\e[38;5;248m${OS_USERNAME#"LOCAL_u_"}" '
symbol = "Ôû®"
when = """ ( test "$OS_USERNAME" != "" ) """
format = '[>](fg:#505050) [$symbol]($style) $output '
style = 'fg:1'
disabled = false

[custom.time]
command = """echo $(date +'%H:%M:%S%P')"""
disabled = false
when = """ true """
format = "[>](fg:#505050) [Ôôè $output]($style) "
style = "fg:242"

[time]
disabled = false
utc_time_offset = "0"
time_format = "%I:%M:%S%P"
format = '[\[$time UTC\]](fg:242) '

[git_branch]
style = 'fg:153'
format = '[$symbol](fg:153)[$branch]($style) '
symbol = 'Óú• '
# ÓÄá Ôë© Ô§Ø ÔëÑ Óò§ Ô¢å Ô¢Å Ô†∂ Ôñ¥ Ôáì

[git_commit]
commit_hash_length = 4
tag_symbol = "üîñ "

[git_status]
style = 'fg:228'
ahead = "‚á°${count}"
diverged = "‚áï‚á°${ahead_count}‚á£${behind_count}"
behind = "‚á£${count}"
format = '([$ahead_behind $conflicted$stashed$deleted$renamed$modified$staged$untracked]($style) )' 
up_to_date = "[Ôò´ ](fg:46)"
stashed = "[Ôõ¢ ](fg:14)"
untracked = "[Ô∞Ç ](fg:226)"
modified = "[ÔÖã ](fg:11)"
deleted = "[ÔÖá ](fg:1)"
staged = "[Ôò¥ ](fg:13)"

[golang]
disabled = true
format = "[via](fg:#505050) [$symbol($version)]($style) "
symbol = 'Óòß '
style = 'bold fg:6'

[python]
disabled = true

[java]
disabled = true

[directory]
truncate_to_repo = true
truncation_length = 12
# truncation_symbol = ".../"
repo_root_style = "fg:153"
repo_root_format = '[>](fg:#505050) [ÔÇõ](fg:153) [$before_root_path]($style)[$repo_root]($repo_root_style)[ $path]($style)[$read_only]($read_only_style) [>](fg:#505050) '
# repo_root_format = '[>](fg:#505050) [ÔÇõ](fg:153) \[[$before_root_path]($style)[$repo_root]($repo_root_style)\][ $path]($style)[$read_only]($read_only_style) '
style = "fg:248"
read_only = ' Ô†Ω'
format = '[>](fg:#505050) [ÔÅº](fg:153)[  $path]($style)[$read_only]($read_only_style) '
# format = '[>](fg:#505050) [Ô≠Ñ ](fg:153)[$path]($style)[$read_only]($read_only_style) '

[cmd_duration]
min_time = 1000
show_milliseconds = false
style = 'bold red'
format = ' ‚è≥ [$duration]($style) '
disabled = true

[aws]
symbol = "ÓåΩ  "

[custom.zsh]
command = "echo üöÄ"
when = """ test "$STARSHIP_SHELL" "==" "zsh" """
format = "$output"
disabled = true

[custom.bash]
command = "echo Óûï Bash Warning " 
when = """ test "$STARSHIP_SHELL" "==" "bash" """
format = "[$output]($style) "
style = "bold red"
disabled = false

[custom.ctx]
command = "echo $(kubectl config current-context |  cut -d'-' -f 1)"
disabled = true
when = """ true """
format = "[$output]($style) "
style = "bold green"

[custom.beer]
command = """echo It\\'s üç∫ time! """
format = '[>](fg:#505050) [$output]($style) '
style = " yellow"
when = """ (( 14.2 <= $(date +'scale=1; %k + %M/60' | bc) && $(date +'scale=1; %k + %M/60' | bc) < 15 )) && test $(date "+%u") = 5  """

[custom.lunch]
command = 'echo Lunch üçî '
format = '[>](fg:#505050) [$output]($style) '
style = " yellow"
when = """ (( 11.5 <= $(date +'scale=1; %k + %M/60' | bc) && $(date +'scale=1; %k + %M/60' | bc) < 13 )) """

[custom.daily]
command = "echo Daily üìÜ "
format = '[>](fg:#505050) [$output]($style) '
style = " yellow"
when = """ (( 11.0 <= $(date +'scale=1; %k + %M/60' | bc) && $(date +'scale=1; %k + %M/60' | bc) < 11.5 )) """

[custom.git_remote_url]
disabled = true
description = 'Remote git repository'
when = 'git rev-parse --is-inside-work-tree'
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
GIT_REMOTE_URL=$(echo $GIT_REMOTE | sed -E 's/^https?:\\/\\/(.+@)?//; s/\\.git$//;  s/\\.git$//; s/.+@(.+):([[:digit:]]+)\\/(.+)$/\\1\\/\\3/; s/.+@(.+):(.+)$/\\1\\/\\2/; s/\\/$//')
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL="Ôêà "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL="Ôäñ "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL="ÔÖ± "
elif [[ -n "$GIT_REMOTE" ]]; then
    GIT_REMOTE_SYMBOL="Ôû° "
else
    GIT_REMOTE_SYMBOL="Ôáí "
fi
echo "$GIT_REMOTE_SYMBOL$GIT_REMOTE_URL"
"""
# Default format is according to the segmented-brackets preset (https://github.com/starship/starship/pull/2747)
format = '\[[$output]($style)\] '
# If you prefer the default Starship style, use the following
# format = "at [$output]($style)"
shell = ["bash", "--noprofile", "--norc"]
style = 'blue'
